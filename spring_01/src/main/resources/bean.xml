<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--告知spring在创建容器时要扫描的包，配置所需要的标签不是在beans的约束中，
            而是一个名称为context名称空间和约束中-->
    <context:component-scan base-package="com.com.pupu"></context:component-scan>
   <!-- 第一种注入：构造函数（工作中一般不用）
        使用的标签: constructor-arg
        标签出现的位置: bean标签的内部
        标签中的属性
            type:用于指定要注大的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
            index:用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从0开始
            name:用于指定给构造函数中指定名称的参数赋值    常用的
            ====以上三个用于指定给构造函数中哪个参数赋值===
            value: 用于提供基本类型和String类型的数据
            ref: 用于指定其他的bean类型数据。它指的就是在spring的Ioc核心容器中出现过的bean对象
        优势：
            在获取bean时，注入数据是必须的操作，否则对象无法创建成功
        缺点：
            改变了bean对象的实例化方式，如果用不到这些数据，也必须创建-->
    <bean id="accountService" class="com.com.pupu.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="普普"/>
        <constructor-arg name="age" value="18"/>
        <constructor-arg name="birthday" ref="now"/>
    </bean>

    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"/>

    <!-- set方法注入 （工作中更常用）
         优势：
            在获取bean时，没有明确的限制，可以直接使用构造函数
          缺点：
            如果某个成员必须优质，则获取对象set方法无法保证一定注入
     -->
    <bean id="accountService2" class="com.com.pupu.service.impl.AccountServiceImpl2">
        <property name="name" value="琼"/>
        <property name="age" value="18"/>
        <property name="birthday" ref="now"/>
    </bean>

</beans>
